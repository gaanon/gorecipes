server {
    listen 80;
    server_name localhost; # Or your domain name

    # Root directory for SvelteKit static assets
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Handle SvelteKit SPA routing (client-side routing)
    # If a file or directory is not found, serve index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to the backend service
    # The backend service will be named 'gorecipes-backend' in Docker Compose or a Docker network
    # The port should match the port your Go backend listens on (e.g., 8080)
    location /api/ {
        # Docker's embedded DNS server is at 127.0.0.11
        # Using a variable for proxy_pass forces Nginx to resolve at runtime.
        resolver 127.0.0.11 valid=10s;
        set $backend_service_name "backend"; # Service name from docker-compose.yml
        proxy_pass http://$backend_service_name:8080; # Pass the original request URI
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: Increase proxy timeouts if needed for long-running API calls
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout 60s;
    }

    # Serve uploaded images from the shared volume
    location /uploads/images/ {
        alias /var/www/uploads/; # This path matches the volume mount in docker-compose.yml
        try_files $uri =404;     # Serve the file if it exists, otherwise return a 404 error
        
        # Optional: Add caching headers, similar to your other static assets
        expires 1y;
        add_header Cache-Control "public";
        access_log off; # Optional: turn off access logging for these images
    }

    # Optional: Add caching for static assets to improve performance
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public";
        access_log off; # Optional: turn off access logging for static assets
    }

    # Optional: Deny access to hidden files
    location ~ /\. {
        deny all;
    }

    # Error pages (optional, Nginx has defaults)
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html; # Or a custom error page directory
    # }
}